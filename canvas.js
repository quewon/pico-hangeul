var jamo = {
  "C": ["ㄱ","ㅅ","ㅈ","ㅂ","ㄷ","ㅁ","ㄴ","ㅇ","ㅊ","ㄹ","ㅋ","ㅌ","ㅍ","ㅎ","ㄲ","ㅆ","ㅉ","ㅃ","ㄸ"],
  "S-1": [".",",","?","!","/","\\",":",";","\""],
  "평순-C": ["ㄱ","ㅅ","ㅈ","ㅂ","ㄷ","ㅁ","ㄴ","ㅇ","ㅊ","ㄹ","ㅋ","ㅌ","ㅍ","ㅎ","ㄲ","ㅆ","ㅉ","ㅃ","ㄸ"],
  "S-2": ["'","`","(",")","[","]","*","+","-"],
  "원순-C": ["ㄱ","ㅅ","ㅈ","ㅂ","ㄷ","ㅁ","ㄴ","ㅇ","ㅊ","ㄹ","ㅋ","ㅌ","ㅍ","ㅎ","ㄲ","ㅆ","ㅉ","ㅃ","ㄸ"],
  "S-3": ["=","<",">","@","#","$","%","&","^"],
  "T평순-C": ["ㄱ","ㅅ","ㅈ","ㅂ","ㄷ","ㅁ","ㄴ","ㅇ","ㅊ","ㄹ","ㅋ","ㅌ","ㅍ","ㅎ","ㄲ","ㅆ","ㅉ","ㅃ","ㄸ"],
  "S-4": ["_","0","1","2","3","4","5","6","7"],
  "T원순-C": ["ㄱ","ㅅ","ㅈ","ㅂ","ㄷ","ㅁ","ㄴ","ㅇ","ㅊ","ㄹ","ㅋ","ㅌ","ㅍ","ㅎ","ㄲ","ㅆ","ㅉ","ㅃ","ㄸ"],
  "S-5": ["8","9","S1","S2","S3","S4","S5","S6","S7"],
  "이중-C": ["ㄱ","ㅅ","ㅈ","ㅂ","ㄷ","ㅁ","ㄴ","ㅇ","ㅊ","ㄹ","ㅋ","ㅌ","ㅍ","ㅎ","ㄲ","ㅆ","ㅉ","ㅃ","ㄸ"],
  "T": ["ㄱ","ㅅ","ㅈ","ㅂ","ㄷ","ㅁ","ㄴ","ㅇ","ㅊ","ㄹ","ㅋ","ㅌ","ㅍ","ㅎ","ㄲ","ㅆ","ㄳ","ᆹ","ᆬ","ᆭ","ᆰ","ᆳ","ᆲ","ᆱ","ᆴ","ㄿ","ᆶ"],
  "V": ["ㅏ","ㅐ","ㅓ","ㅔ","ㅣ","ㅑ","ㅒ","ㅕ","ㅖ","ㅗ","ㅜ","ㅡ","ㅛ","ㅠ","ㅘ","ㅙ","ㅚ","ㅝ","ㅞ","ㅟ","ㅢ"],
  "중성-V": ["ㅏ","ㅐ","ㅓ","ㅔ","ㅣ","ㅑ","ㅒ","ㅕ","ㅖ","ㅗ","ㅜ","ㅡ","ㅛ","ㅠ","ㅘ","ㅙ","ㅚ","ㅝ","ㅞ","ㅟ","ㅢ"],
  "T중성-V": ["ㅏ","ㅐ","ㅓ","ㅔ","ㅣ","ㅑ","ㅒ","ㅕ","ㅖ","ㅗ","ㅜ","ㅡ","ㅛ","ㅠ","ㅘ","ㅙ","ㅚ","ㅝ","ㅞ","ㅟ","ㅢ"],
  "S-6": ["S1", "S2"],
  
  
  
  // "C": ["ㄱ","ㄴ","ㄷ","ㄹ","ㅁ","ㅂ","ㅅ","ㅇ","ㅈ","ㅊ","ㅋ","ㅌ","ㅍ","ㅎ","ㄲ","ㅆ","ㄸ","ㅃ","ㅉ"],
  // "V": ["ㅏ","ㅐ","ㅑ","ㅒ","ㅓ","ㅔ","ㅕ","ㅖ","ㅣ","ㅗ","ㅛ","ㅜ","ㅠ","ㅡ","ㅘ","ㅙ","ㅚ","ㅝ","ㅞ","ㅟ","ㅢ"],
  // "T": ["ㄱ","ㄴ","ㄷ","ㄹ","ㅁ","ㅂ","ㅅ","ㅇ","ㅈ","ㅊ","ㅋ","ㅌ","ㅍ","ㅎ","ㄲ","ㅆ","ᆪ","ᆬ","ᆭ","ᆰ","ᆱ","ᆲ","ᆳ","ᆴ","ᆵ","ᆶ","ᆹ"],
  // 
  // // '가'의 ㄱ, '너'의 ㄴ
  // "평순-C": ["ㄱ","ㄴ","ㄷ","ㄹ","ㅁ","ㅂ","ㅅ","ㅇ","ㅈ","ㅊ","ㅋ","ㅌ","ㅍ","ㅎ","ㄲ","ㅆ","ㄸ","ㅃ","ㅉ"],
  // "원순-C": ["ㄱ","ㄴ","ㄷ","ㄹ","ㅁ","ㅂ","ㅅ","ㅇ","ㅈ","ㅊ","ㅋ","ㅌ","ㅍ","ㅎ","ㄲ","ㅆ","ㄸ","ㅃ","ㅉ"],
  // "중성-V": ["ㅏ","ㅐ","ㅑ","ㅒ","ㅓ","ㅔ","ㅕ","ㅖ","ㅣ","ㅗ","ㅛ","ㅜ","ㅠ","ㅡ","ㅘ","ㅙ","ㅚ","ㅝ","ㅞ","ㅟ","ㅢ"],
  // 
  // "T평순-C": ["ㄱ","ㄴ","ㄷ","ㄹ","ㅁ","ㅂ","ㅅ","ㅇ","ㅈ","ㅊ","ㅋ","ㅌ","ㅍ","ㅎ","ㄲ","ㅆ","ㄸ","ㅃ","ㅉ"],
  // "T원순-C": ["ㄱ","ㄴ","ㄷ","ㄹ","ㅁ","ㅂ","ㅅ","ㅇ","ㅈ","ㅊ","ㅋ","ㅌ","ㅍ","ㅎ","ㄲ","ㅆ","ㄸ","ㅃ","ㅉ"],
  // "T중성-V": ["ㅏ","ㅐ","ㅑ","ㅒ","ㅓ","ㅔ","ㅕ","ㅖ","ㅣ","ㅗ","ㅛ","ㅜ","ㅠ","ㅡ","ㅘ","ㅙ","ㅚ","ㅝ","ㅞ","ㅟ","ㅢ"],
  // 
  // "이중-C": ["ㄱ","ㄴ","ㄷ","ㄹ","ㅁ","ㅂ","ㅅ","ㅇ","ㅈ","ㅊ","ㅋ","ㅌ","ㅍ","ㅎ","ㄲ","ㅆ","ㄸ","ㅃ","ㅉ"],
  // 
  // "숫자": ["0","1","2","3","4","5","6","7","8","9"],
  // 
  // "특수": [".",",","?","!","/","\\",":",";","\"","'","`","(",")","[","]","*","+","-","=","<",">","@","#","$","%","&","^","_"]
}

// var default_data = `\0\0~@@@\0\0\0\0\0「$B\0\0\0\0>⁸⁘b\0\0\0\0B~B~\0\0\0\0~²²~\0\0\0\0~BB~\0\0\0\0²²²~\0\0\0\0<BB<\0\0\0⁸>⁸⁘b\0\0\0\0~@~²~\0\0\0~@x@\0\0\0\0~²゛²~\0\0\0~$$~\0\0\0\0⁸~<B<\0\0\0~HHH\0\0\0\0$$ZZ\0\0\0\0~□□~\0\0\0\0~$$Z\0\0\0\0J~J~\0\0⁸⁸⁸8⁸⁸⁸⁸(((8((((⁸⁸8⁸8⁸⁸⁸((8(8(((▮▮▮、▮▮▮▮(((.((((▮▮、▮、▮▮▮((,(,(((⁸⁸⁸⁸⁸⁸⁸⁸\0\0▮▮◝\0\0\0\0\0\0$$◝\0\0\0\0\0\0◝▮▮▮\0\0\0\0◝$$$\0\0\0\0◝\0\0\0   ナ$$? きききナささよき@@@@DD_@@@@@_DtDききききよさひさ@@@@_DDD@@@@@@_@\0\0\0\0\0~@@\0\0\0\0\0²²~\0\0\0\0\0~²~\0\0\0\0\0?ュュ\0\0\0\0\0~B~\0\0\0\0\0B~~\0\0\0\0\0「$B\0\0\0\0\0<B<\0\0\0\0\0>⁸v\0\0\0\0\0⁸>D\0\0\0\0\0~x@\0\0\0\0\0~゛~\0\0\0\0\0~$~\0\0\0\0\0「~<\0\0\0\0\0~HH\0\0\0\0\0$$Z\0\0\0\0\0.(X\0\0\0\0\0r"^\0\0\0\0\0"r.\0\0\0\0\0vDL\0\0\0\0\0vT|\0\0\0\0\0Vt|\0\0\0\0\0&$\\\0\0\0\0\0v4|\0\0\0\0\0v$|\0\0\0\0\0&t,\0\0\0\0\0*.^ᶠ⁸⁸⁸⁸⁸\0\0¹¹¹¹¹ᶠ\0\0ᶠ¹¹¹¹ᶠ\0\0ᶠ⁸ᶠ¹¹ᶠ\0\0ᶠ\t\t\t\tᶠ\0\0\t\tᶠ\t\tᶠ\0\0⁴⁴⁴\n\n\n\0\0⁶\t\t\t\t⁶\0\0⁷²²²⁵\t\0\0²⁷²²⁵\t\0\0ᶠ⁸ᵉ⁸⁸⁸\0\0ᶠ¹⁷¹¹ᶠ\0\0ᶠ⁶⁶⁶⁶ᶠ\0\0²゜\n\n\n⁴\0\0ᶠ\n\n\n\n\n\0\0\n\n\n‖‖‖\0\0ᶠ⁵⁵⁵⁵ᶠ\0\0ᵇᵇᶠᵇᵇᶠ\0\0ᶠ⁶⁶⁷ᵇᵇ\0\0~@@@\0\0\0\0²²~\0\0\0\0\0~²²~\0\0\0\0~pᵉ~\0\0\0\0~B~\0\0\0\0\0B~~\0\0\0\0\0「$B\0\0\0\0\0<B<\0\0\0\0\0>⁸v\0\0\0\0\0⁸>D\0\0\0\0\0~x@\0\0\0\0\0~゛~\0\0\0\0\0~$~\0\0\0\0\0⁸~$「\0\0\0\0~HHH\0\0\0\0$$Z\0\0\0\0\0~□□~\0\0\0\0J~~\0\0\0\0\0~$Z\0\0\0\0\0   ナ    きききナきききき  ナ ナ   ききナきナききき@@@p@@@@きききまきききき@@p@p@@@ききぬきぬききき@@@@@@@@\0\0\0▮▮▮◝\0\0\0\0\0$$◝\0\0\0\0\0◝▮▮▮\0\0\0\0◝$$$\0\0\0\0\0\0◝\0   ナ$$? きききナささよき@@@@DD_@@@@@_DtDききききよさひさ@@@@_DDD@@@@@@_@ᶠ⁸⁸⁸\0\0\0\0¹¹¹ᶠ\0\0\0\0ᶠ¹¹ᶠ\0\0\0\0ᶠᶜ³ᶠ\0\0\0\0ᶠ\t\tᶠ\0\0\0\0\tᶠ\tᶠ\0\0\0\0⁴⁴\n\n\0\0\0\0⁶\t\t⁶\0\0\0\0⁷²⁵\t\0\0\0\0²ᶠ⁶\n\0\0\0\0ᶠ⁸ᵉ⁸\0\0\0\0ᶠ¹⁷ᶠ\0\0\0\0ᶠ⁶⁶ᶠ\0\0\0\0²ᶠ⁶⁶\0\0\0\0ᶠ\n\n\n\0\0\0\0⁶⁶ᵇᵇ\0\0\0\0ᶠ⁵⁵ᶠ\0\0\0\0ᵇᶠᵇᶠ\0\0\0\0ᶠ⁶⁷ᵇ\0\0\0\0~@@\0\0\0\0\0²²~\0\0\0\0\0~²~\0\0\0\0\0゛xx\0\0\0\0\0~B~\0\0\0\0\0B~~\0\0\0\0\0「$B\0\0\0\0\0<B<\0\0\0\0\0>⁸v\0\0\0\0\0⁸>D\0\0\0\0\0~x@\0\0\0\0\0~゛~\0\0\0\0\0~$~\0\0\0\0\0⁸~<\0\0\0\0\0~HH\0\0\0\0\0$$Z\0\0\0\0\0~□~\0\0\0\0\0J~~\0\0\0\0\0~$Z\0\0\0\0\0 ナ  \0\0\0\0きナきき\0\0\0\0 ナ ナ\0\0\0\0きナきナ\0\0\0\0@p@@\0\0\0\0きまきき\0\0\0\0@p@p\0\0\0\0きぬきぬ\0\0\0\0@@@@@\0\0\0\0\0▮▮◝\0\0\0\0\0\0$◝\0\0\0\0\0\0◝▮\0\0\0\0\0\0◝$\0\0\0\0\0\0\0◝\0\0\0  ノ$?\0\0\0ききノさよ\0\0\0@@DD_\0\0\0@@\`_D\0\0\0きききよひ\0\0\0@@@_D\0\0\0@@@@_\0\0\0ᵉ⁸⁸\0\0\0\0\0²²ᵉ\0\0\0\0\0ᵉ²ᵉ\0\0\0\0\0⁶⁴ᶜ\0\0\0\0\0ᵉ\nᵉ\0\0\0\0\0\nᵉᵉ\0\0\0\0\0⁴⁴\n\0\0\0\0\0⁴\n⁴\0\0\0\0\0ᵉ⁴\n\0\0\0\0\0²⁷\n\0\0\0\0\0ᵉᶜ⁸\0\0\0\0\0ᵉ⁶ᵉ\0\0\0\0\0ᵉ⁴ᵉ\0\0\0\0\0²ᶠ⁶\0\0\0\0\0ᶠ\n\n\0\0\0\0\0⁶⁶ᵇ\0\0\0\0\0ᶠ⁵ᶠ\0\0\0\0\0ᵇᶠᶠ\0\0\0\0\0ᶠ⁶ᵇ\0\0\0\0\0「$$$$$$「▮「⁘▮▮▮▮|「$ ▮⁸⁴⁴<「$ 「  $「▮「⁘~▮▮▮▮<⁴⁴、  $「「$⁴、$$$「<$$     「$$「$$$「「$$8  $「\0\0\0\0\0\0\0⁸\0\0\0\0\0\0▮⁸、" ▮⁸\0\0⁸⁸⁸⁸⁸⁸\0\0⁸  ▮▮⁸⁸⁴⁴⁴⁴⁸⁸▮▮  \0⁸\0\0\0\0⁸\0\0⁸\0\0\0\0⁸⁴⁘⁘⁘\0\0\0\0\0▮⁸\0\0\0\0\0\0⁸▮\0\0\0\0\0\0\0⁸⁴⁴⁴⁴⁸0ᶜ▮    ▮ᶜ8⁸⁸⁸⁸⁸⁸8、▮▮▮▮▮▮、\0\0"⁘⁸⁘"\0\0\0⁸⁸>⁸⁸\0\0\0\0\0>\0\0\0`
var default_data = `\0\0\0\0\0\0\0\0\0\0~@@@\0\0\0\0「$B\0\0\0\0\0>⁸⁘b\0\0\0\0B~B~\0\0\0\0~²²~\0\0\0\0~BB~\0\0\0\0²²²~\0\0\0\0<BB<\0\0\0⁸>⁸⁘b\0\0\0\0~@~²~\0\0\0~@x@\0\0\0\0~²゛²~\0\0\0~$$~\0\0\0⁸~<B<\0\0\0\0~HHH\0\0\0\0$$ZZ\0\0\0\0~$$Z\0\0\0\0JJ~~\0\0\0\0~□□~\0\0\0\0\0\0\0\0\0⁸\0\0\0\0\0\0▮⁸、" ▮⁸\0\0⁸⁸⁸⁸⁸⁸\0\0⁸  ▮▮⁸⁸⁴⁴⁴⁴⁸⁸▮▮  \0⁸\0\0\0\0⁸\0\0⁸\0\0\0\0⁸⁴⁘⁘⁘\0\0\0\0\0ᶠ⁸⁸⁸⁸⁸\0\0⁴⁴⁴\n\n\n\0\0⁷²²²⁵\t\t\0\t\tᶠ\t\tᶠ\0\0ᶠ¹¹¹¹ᶠ\0\0ᶠ\t\t\t\tᶠ\0\0¹¹¹¹¹ᶠ\0\0⁶\t\t\t\t⁶\0\0²⁷²²⁵\t\0\0ᶠ⁸ᶠ¹¹ᶠ\0\0ᶠ⁸ᵉ⁸⁸⁸\0\0ᶠ¹⁷¹¹ᶠ\0\0ᶠ⁶⁶⁶⁶ᶠ\0\0²ᶠ⁶⁶⁶\0\0\0ᶠ\n\n\n\n\n\0\0⁶⁶⁶ᵇᵇᵇ\0\0ᶠ⁶⁶⁷ᵇᵇ\0\0ᵇᵇᶠᵇᵇᶠ\0\0ᶠ⁵⁵⁵⁵ᶠ\0\0▮⁸\0\0\0\0\0\0⁸▮\0\0\0\0\0\0\\0⁸⁴⁴⁴⁴⁸0ᶜ▮    ▮ᶜ、▮▮▮▮▮▮、8⁸⁸⁸⁸⁸⁸8\0\0"⁘⁸⁘"\0\0\0⁸⁸>⁸⁸\0\0\0\0\0>\0\0\0~@@@\0\0\0\0「$B\0\0\0\0\0>⁸v\0\0\0\0\0B~~\0\0\0\0\0~²~\0\0\0\0\0~B~\0\0\0\0\0²²~\0\0\0\0\0<B<\0\0\0\0\0⁴>D\0\0\0\0\0~pᵉ~\0\0\0\0~@x@@\0\0\0~゛~\0\0\0\0\0~$~\0\0\0\0\0「~$「\0\0\0\0~HHH\0\0\0\0$$Z\0\0\0\0\0~$Z\0\0\0\0\0J~~\0\0\0\0\0~□~\0\0\0\0\0\0\0\0>\0>\0\0 ▮⁸⁴⁴⁸▮ ⁴⁸▮  ▮⁸⁴\0\0\0\0\0\0\0\0\0HH◝$◝□□\0\0\0\0\0\0\0\0🐱E"▮⁸DけA\0\0\0\0\0\0\0\0⁸⁘"\0\0\0\0\0ᶠ⁸⁸⁸\0\0\0\0⁴⁴\n\n\0\0\0\0⁷²⁵\t\0\0\0\0\tᶠ\tᶠ\0\0\0\0ᶠ¹¹ᶠ\0\0\0\0ᶠ\t\tᶠ\0\0\0\0¹¹¹ᶠ\0\0\0\0⁶\t\t⁶\0\0\0\0²⁷²\r\0\0\0\0ᶠᶜ³ᶠ\0\0\0\0ᶠ⁸ᵉ⁸\0\0\0\0ᶠ¹⁷ᶠ\0\0\0\0ᶠ⁶⁶ᶠ\0\0\0\0²ᶠ⁶⁶\0\0\0\0ᶠ\n\n\n\0\0\0\0⁶⁶ᵇᵇ\0\0\0\0ᶠ⁶⁷ᵇ\0\0\0\0ᵇᶠᵇᶠ\0\0\0\0ᶠ⁵⁵ᶠ\0\0\0\0\0\0\0\0\0\0\0◜「$$$$$$「▮「⁘▮▮▮▮|「$ ▮⁸⁴⁴<「$ 「  $「▮「⁘~▮▮▮▮<⁴⁴、  $「「$⁴、$$$「<$$     ~@@\0\0\0\0\0「$B\0\0\0\0\0>⁸v\0\0\0\0\0B~~\0\0\0\0\0~²~\0\0\0\0\0~B~\0\0\0\0\0²²~\0\0\0\0\0<B<\0\0\0\0\0⁴>D\0\0\0\0\0゛「x\0\0\0\0\0~x@\0\0\0\0\0~゛~\0\0\0\0\0~$~\0\0\0\0\0「~<\0\0\0\0\0~HH\0\0\0\0\0$$Z\0\0\0\0\0~$Z\0\0\0\0\0J~~\0\0\0\0\0~□~\0\0\0\0\0「$$「$$$「「$$8  $「\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0ᵉ⁸⁸\0\0\0\0\0⁴⁴\n\0\0\0\0\0ᵉ⁴\n\0\0\0\0\0\nᵉᵉ\0\0\0\0\0ᵉ²ᵉ\0\0\0\0\0ᵉ\nᵉ\0\0\0\0\0²²ᵉ\0\0\0\0\0⁴\n⁴\0\0\0\0\0ᶠ⁶ᵇ\0\0\0\0\0⁶⁴ᶜ\0\0\0\0\0ᵉᶜ⁸\0\0\0\0\0ᵉ⁶ᵉ\0\0\0\0\0ᶠ⁵ᶠ\0\0\0\0\0²ᶠ⁶\0\0\0\0\0ᶠ\n\n\0\0\0\0\0⁶⁶ᵇ\0\0\0\0\0ᶠ⁶ᵇ\0\0\0\0\0ᵇᶠᶠ\0\0\0\0\0ᶠ⁵ᶠ\0\0\0\0\0\0\0\0\0\0~@@\0\0\0\0\0「$B\0\0\0\0\0>⁸v\0\0\0\0\0B~~\0\0\0\0\0~²~\0\0\0\0\0~B~\0\0\0\0\0²²~\0\0\0\0\0<B<\0\0\0\0\0⁴>D\0\0\0\0\0゛「x\0\0\0\0\0~x@\0\0\0\0\0~゛~\0\0\0\0\0~$~\0\0\0\0\0「~<\0\0\0\0\0~HH\0\0\0\0\0$$Z\0\0\0\0\0.(X\0\0\0\0\0*.^\0\0\0\0\0r"^\0\0\0\0\0"r.\0\0\0\0\0vDL\0\0\0\0\0&$\\\0\0\0\0\0Vt|\0\0\0\0\0vT|\0\0\0\0\0v4|\0\0\0\0\0v$|\0\0\0\0\0&t,⁸⁸⁸8⁸⁸⁸⁸(((8((((▮▮▮、▮▮▮▮(((.((((⁸⁸⁸⁸⁸⁸⁸⁸⁸⁸8⁸8⁸⁸⁸((8(8(((▮▮、▮、▮▮▮((,(,(((\0\0\0▮▮◝\0\0\0\0\0\0◝▮▮▮\0\0\0\0◝\0\0\0\0\0\0$$◝\0\0\0\0\0\0◝$$$   ナ$$? きききナささよき@@@@DD_@@@@@_DtDききききよさひさ@@@@_DDD@@@@@@_@   ナ    きききナきききき@@@p@@@@きききまきききき@@@@@@@@  ナ ナ   ききナきナききき@@p@p@@@ききぬきぬききき\0\0\0\0▮▮◝\0\0\0\0\0◝▮▮▮\0\0\0\0\0\0◝\0\0\0\0\0$$◝\0\0\0\0\0◝$$$   ナ$$? きききナささよき@@@@DD_@@@@@_DtDききききよさひさ@@@@_DDD@@@@@@_@ ナ  \0\0\0\0きナきき\0\0\0\0@@p@\0\0\0\0ききまき\0\0\0\0@@@@@\0\0\0 ナ ナ\0\0\0\0きナきナ\0\0\0\0@p@p\0\0\0\0きぬきぬ\0\0\0\0\0\0▮▮◝\0\0\0\0\0\0◝▮\0\0\0\0\0\0\0◝\0\0\0\0\0\0$◝\0\0\0\0\0\0◝$\0\0\0  ノ$?\0\0\0ききノさよ\0\0\0@@DD_\0\0\0@@\`_D\0\0\0きききよひ\0\0\0@@@_D\0\0\0@@@@_\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`;

// print(sub("\0a\tb\rc"),1)

// 원순-C는 T를 위쪽으로 옮긴 것이다.
// C는 원순-C를 가운데로 옮긴 거로 대체 가능하다.

var arrays = {};
var mousedown = false;
var mode = "draw";
var current_jamo;

var canvas = document.getElementById("canvas");
var context = canvas.getContext("2d");

var chr = `\0¹²³⁴⁵⁶⁷⁸\t\nᵇᶜ\rᵉᶠ▮■□⁙⁘‖◀▶「」¥•、。゛゜ !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_\`abcdefghijklmnopqrstuvwxyz{|}~○█▒🐱⬇️░✽●♥☉웃⌂⬅️😐♪🅾️◆…➡️★⧗⬆️ˇ∧❎▤▥あいうえおかきくけこさしすせそたちつてとなにぬねのはひふへほまみむめもやゆよらりるれろわをんっゃゅょアイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヲンッャュョ◜◝`

var save_data = document.getElementById("save-data");

init();

function load(silent) {
  let a = save_data.value;
  a = a.substring(8).replaceAll("\\0","\0").replaceAll("\\t","\t").replaceAll("\\n","↩").replaceAll("\\r","\r").replaceAll("\\\"","\"").replaceAll("\\\\","\\");
  a = Array.from(new Intl.Segmenter("en", {granularity: 'grapheme'}).segment(a), ({segment}) => segment);
  let data = [];
  for (let i=0; i<a.length; i+=8) {
    data.push([a[i],a[i+1],a[i+2],a[i+3],a[i+4],a[i+5],a[i+6],a[i+7]]);
  }
  var lis = document.querySelectorAll("li");
  
  let i=0;
  for (let name in arrays) {
    let d = data[i];
    let empty = true;
    
    for (let y=0; y<=7; y++) {
      arrays[name][y] = [];
      let value = chr.indexOf(d[y].replace("↩","\n"));
      // let value = ord[d[y]];
      let a = ("000000000" + value.toString(2)).substr(-8);
      // flip bin
      let bin = "";
      for (let i=7; i>=0; i--) {
        bin += a[i];
      }
      for (let x=0; x<=7; x++) {
        arrays[name][y][x] = bin[x] == "1" ? true : false;
        if (arrays[name][y][x]) {
          empty = false;
        }
      }
    }
    
    if (!empty) {
      lis[i].classList.remove("empty");
    } else {
      lis[i].classList.add("empty");
    }
    
    i++;
  }
  
  loadJamo(current_jamo);
  
  draw_output();
  
  if (!silent) {
    alert("데이터를 성공적으로 불러왔습니다 :)");
  }
}

function update_p8_data() {
  let data = "";
  let current = current_jamo;
  
  for (let name in arrays) {
    current_jamo = name;
    data += getCharVals();
  }
  
  current_jamo = current;
  
  return data;
}

function init() {
  chr = Array.from(new Intl.Segmenter("en", {granularity: 'grapheme'}).segment(chr), ({segment}) => segment);
  init_input();
  
  let list = document.getElementById("list");
  
  for (let name in jamo) {
    for (let i=0; i<jamo[name].length; i++) {
      let chname = name+"-"+jamo[name][i];
      arrays[chname] = [];
      
      for (let y=0; y<=7; y++) {
        arrays[chname][y] = [];
        for (let x=0; x<=7; x++) {
          arrays[chname][y][x] = false;
        }
      }
      
      let li = document.createElement("li");
      li.textContent = chname;
      li.classList.add("empty");
      
      li.onclick = function() {
        loadJamo(chname);
      }
      
      list.appendChild(li);
    }
  }
  
  let preview = document.getElementById("preview").getContext("2d");
  canvas.onmousedown = function(e) {
    mousedown = true;
    
    let pos = getMousePos(canvas, e);
    let color = context.getImageData(pos.x, pos.y, 1, 1).data;
    
    if (color[3] == 0) {
      mode = "draw";
    } else {
      mode = "erase";
    }
    
    draw(e, context);
  }
  document.onmousemove = function(e) {
    if (mousedown) {
      preview.clearRect(0, 0, preview.canvas.width, preview.canvas.height);
      draw(e, context);
    } else {
      preview.clearRect(0, 0, preview.canvas.width, preview.canvas.height);
      draw(e, preview, true);
    }
  };
  document.onmouseup = function() {
    mousedown = false;
    mode = "draw";
  }
  
  loadJamo("C-ㄱ");
  
  save_data.value = default_data;
  load(true);
}

function draw(e, context, override) {
  let pos = getMousePos(canvas, e);
  let x = Math.floor(pos.x);
  let y = Math.floor(pos.y);
  
  if (x<0 || y<0 || x>7 || y>7) return;
  
  if (mode == "draw" || override) {
    context.fillRect(x, y, 1, 1);
  } else {
    context.clearRect(x, y, 1, 1);
  }
  
  if (!override) {
    let li = document.querySelector(".selected");
    if (mode == "draw") {
      arrays[current_jamo][y][x] = true;
      li.classList.remove("empty");
    } else {
      arrays[current_jamo][y][x] = false;
      let empty = true;
      bigloop: for (let cy=0; cy<=7; cy++) {
        for (let cx=0; cx<=7; cx++) {
          if (arrays[current_jamo][cy][cx]) {
            empty = false;
            break bigloop;
          }
        }
      }
      if (empty) {
        li.classList.add("empty");
      }
    }
    
    let val = getCharVals();
    let bin = document.getElementById("bin");
    bin.textContent = val;
    
    draw_output();
  }
}

function getMousePos(canvas, evt) {
  var rect = canvas.getBoundingClientRect(), // abs. size of element
    scaleX = canvas.width / rect.width,    // relationship bitmap vs. element for x
    scaleY = canvas.height / rect.height;  // relationship bitmap vs. element for y

  return {
    x: (evt.clientX - rect.left) * scaleX,   // scale mouse coordinates after they have
    y: (evt.clientY - rect.top) * scaleY     // been adjusted to be relative to element
  }
}

function loadJamo(name) {
  current_jamo = name;
  document.getElementById("bin").textContent = getCharVals();
  context.clearRect(0, 0, canvas.width, canvas.height);
  
  let lis = document.querySelectorAll("li");
  for (let i=0; i<lis.length; i++) {
    lis[i].classList.remove("selected");
    if (lis[i].textContent == name) {
      lis[i].classList.add("selected");
    }
  }
  
  let a = arrays[name];
  
  for (let y=0; y<=7; y++) {
    for (let x=0; x<=7; x++) {
      if (a[y][x]) {
        context.fillRect(x, y, 1, 1);
      }
    }
  }
  
  let split = name.split("-");
  document.getElementById("title").textContent = split[split.length-1];
  
  console.log("loaded "+name);
}



function getCharVals() {
  let binary = "";
  for (let y=0; y<=7; y++) {
    let row = 0;
    for (let x=0; x<=7; x++) {
      let val = arrays[current_jamo][y][x] ? 1 : 0;
      row += val * Math.pow(2, x);
    }
    
    let ch = chr[row];
    switch (ch) {
      case "\0":
        ch = "\\0";
        break;
      case "\n":
        ch = "\\n";
        break;
      case "\t":
        ch = "\\t";
        break;
      case "\r":
        ch = "\\r";
        break;
      case "\"":
        ch = "\\\"";
        break;
      case "\\":
        ch = "\\\\";
        break;
      default:
        break;
    }
    
    binary += ch;
  }
  
  return binary
}

function copy() {
  let bin = document.getElementById("bin");
  navigator.clipboard.writeText(bin.textContent);
}